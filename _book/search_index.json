[
["index.html", "R you ready? Preface", " R you ready? Reto Wyss, Greg Martin 2018-10-27 Preface Figure .: RStudio (This is the caption) \\[ a = \\sum \\] In this book R Core Team (2018) and Wickham (2017) Definition . Here is my theorem. Example . This is my example This is a custom block. We can style it however we want. References "],
["setup.html", "1 Setup", " 1 Setup In this chapter bla bla (promise) (preview) "],
["installing-r-and-rstudio.html", "1.1 Installing R and RStudio", " 1.1 Installing R and RStudio R https://cran.r-project.org/mirrors.html RStudio https://www.rstudio.com/products/rstudio/download/ "],
["working-with-r-in-rstudio.html", "2 Working with R in RStudio", " 2 Working with R in RStudio In this chapter bla bla (promise) (preview) Explain Quadrants I think we could create a section for each of the important windows/tabs. Also we should make every step as actionable as possible. Testing image Figure 2.1: RStudio (This is the caption) "],
["files-viewer-help-br.html", "2.1 Files, Viewer, Help (br)", " 2.1 Files, Viewer, Help (br) "],
["the-console-bl.html", "2.2 The Console (bl)", " 2.2 The Console (bl) [Action] Show arthimetic ops here Now that you are all set up we want to dive straight into using R. To get the most out of this tutorial you should try to run the code yourself on the console in RStudio. You can think of R as a calculator - a very powerful calculator. R supports the five basic arithmetic operations you are familiar with and three more you might not yet have seen. The operators for addition, subtraction and multiplication are self explanatory. 4 + 5 # Addition 10 - 1 # Subtraction 3 * 3 # Multiplication 27 / 3 # Division 3 ** 2 # Power # Standard operator presedence and parentheses rules apply (35 + 8) * 2 ** (10 / 2) - 39 ## [1] 9 ## [1] 9 ## [1] 9 ## [1] 9 ## [1] 9 ## [1] 1337 There are two ways of writing the power operator ** and ^. Personally, I prefer the first way. Maybe cut this part Now, let’s have a look at the three less common operator. They are modulo, whole number division and matrix-multiplication. test change 43 %% 7 # Modulo 43 %/% 7 # Whole number division c(4, 2) %*% c(2, 4) # Matrix-multiplication ## [1] 1 ## [1] 6 ## [,1] ## [1,] 16 "],
["script-tl.html", "2.3 Script (tl)", " 2.3 Script (tl) [Action] Show how code (arithmetic can be written in a script file and then be executed on the console) Top left is the script window "],
["history-and-environment-tr.html", "2.4 History and Environment (tr)", " 2.4 History and Environment (tr) [Action] Show how to assign variables ow, let’s define our first variable. We will call it my_first_variable. 2.4.1 Creating variables my_first_variable &lt;- 42 When you enter this on your R console in RStudio nothing will happen. We have told R to store the number 42 in a variable and we call this specific variable my_first_variable. To retrieve the value of our variable we just type the variable name and hit enter. my_first_variable ## [1] 42 Arithmetic operations work on variables just like they do on literal numbers. a &lt;- 5 b &lt;- 10 a * b ## [1] 50 2.4.2 Vectors Vectors are a data-structure. They can hold multiple values at once and they can be referenced by a single variable. To create a vector you will use c(). my_first_vector &lt;- c(42, 5, 10) You can have a glimpse at the values in your vector by typing its name. my_first_vector ## [1] 42 5 10 Performing arithmetics on vector is analogous to atomic values. my_first_vector * 10 ## [1] 420 50 100 "],
["starting-data-analysis.html", "3 Starting Data Analysis ", " 3 Starting Data Analysis "],
["creating-a-project.html", "3.1 Creating A Project", " 3.1 Creating A Project You should always use the project functonality when you work with R and RStudio. This also sets the working-directory. getwd() ## [1] &quot;C:/Users/retow/Documents/GitHub/r-getting-started&quot; "],
["folder-structure.html", "3.2 Folder Structure", " 3.2 Folder Structure Show new and existing directory options. Some people may already have collected data. +---Data | +---Output "],
["packages.html", "3.3 Packages", " 3.3 Packages We can prime this by telling people about the R community in the introduction installing and loading (maybe show updating in RStudio) "],
["importing-data.html", "3.4 Importing Data", " 3.4 Importing Data This is rather short and not worth a chapter on it’s own. Filetypes: csv xlsx library(readr) Here we introduce the readr and readxl packagtes. my_iris &lt;- read_csv(&quot;iris.csv&quot;) ## Parsed with column specification: ## cols( ## Sepal.Length = col_double(), ## Sepal.Width = col_double(), ## Petal.Length = col_double(), ## Petal.Width = col_double(), ## Species = col_character() ## ) head(my_iris, n = 5) ## # A tibble: 5 x 5 ## Sepal.Length Sepal.Width Petal.Length Petal.Width Species ## &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; ## 1 5.1 3.5 1.4 0.2 setosa ## 2 4.9 3 1.4 0.2 setosa ## 3 4.7 3.2 1.3 0.2 setosa ## 4 4.6 3.1 1.5 0.2 setosa ## 5 5 3.6 1.4 0.2 setosa this is useful because we can fix the column types like this. my_iris &lt;- read_csv( file = &quot;iris.csv&quot;, col_types = cols( Sepal.Length = col_double(), Sepal.Width = col_double(), Petal.Length = col_double(), Petal.Width = col_double(), Species = col_character() ) ) "],
["manipulating-data.html", "4 Manipulating Data", " 4 Manipulating Data Here we introduce the tidyr, dplyr, stringr and forcats packages. Important functions: dplyr::rename dplyr::mutate tidyr::separate stringr::str_extract stringr::str_replace library(tidyr) iris %&gt;% separate(Sepal.Length, into = c(&quot;first&quot;, &quot;second&quot;), sep = &quot;\\\\.&quot;) ## Warning: Expected 2 pieces. Missing pieces filled with `NA` in 17 rows [5, ## 8, 26, 27, 36, 41, 44, 50, 51, 61, 63, 79, 84, 86, 94, 120, 139]. ## first second Sepal.Width Petal.Length Petal.Width Species ## 1 5 1 3.5 1.4 0.2 setosa ## 2 4 9 3.0 1.4 0.2 setosa ## 3 4 7 3.2 1.3 0.2 setosa ## 4 4 6 3.1 1.5 0.2 setosa ## 5 5 &lt;NA&gt; 3.6 1.4 0.2 setosa ## 6 5 4 3.9 1.7 0.4 setosa ## 7 4 6 3.4 1.4 0.3 setosa ## 8 5 &lt;NA&gt; 3.4 1.5 0.2 setosa ## 9 4 4 2.9 1.4 0.2 setosa ## 10 4 9 3.1 1.5 0.1 setosa ## 11 5 4 3.7 1.5 0.2 setosa ## 12 4 8 3.4 1.6 0.2 setosa ## 13 4 8 3.0 1.4 0.1 setosa ## 14 4 3 3.0 1.1 0.1 setosa ## 15 5 8 4.0 1.2 0.2 setosa ## 16 5 7 4.4 1.5 0.4 setosa ## 17 5 4 3.9 1.3 0.4 setosa ## 18 5 1 3.5 1.4 0.3 setosa ## 19 5 7 3.8 1.7 0.3 setosa ## 20 5 1 3.8 1.5 0.3 setosa ## 21 5 4 3.4 1.7 0.2 setosa ## 22 5 1 3.7 1.5 0.4 setosa ## 23 4 6 3.6 1.0 0.2 setosa ## 24 5 1 3.3 1.7 0.5 setosa ## 25 4 8 3.4 1.9 0.2 setosa ## 26 5 &lt;NA&gt; 3.0 1.6 0.2 setosa ## 27 5 &lt;NA&gt; 3.4 1.6 0.4 setosa ## 28 5 2 3.5 1.5 0.2 setosa ## 29 5 2 3.4 1.4 0.2 setosa ## 30 4 7 3.2 1.6 0.2 setosa ## 31 4 8 3.1 1.6 0.2 setosa ## 32 5 4 3.4 1.5 0.4 setosa ## 33 5 2 4.1 1.5 0.1 setosa ## 34 5 5 4.2 1.4 0.2 setosa ## 35 4 9 3.1 1.5 0.2 setosa ## 36 5 &lt;NA&gt; 3.2 1.2 0.2 setosa ## 37 5 5 3.5 1.3 0.2 setosa ## 38 4 9 3.6 1.4 0.1 setosa ## 39 4 4 3.0 1.3 0.2 setosa ## 40 5 1 3.4 1.5 0.2 setosa ## 41 5 &lt;NA&gt; 3.5 1.3 0.3 setosa ## 42 4 5 2.3 1.3 0.3 setosa ## 43 4 4 3.2 1.3 0.2 setosa ## 44 5 &lt;NA&gt; 3.5 1.6 0.6 setosa ## 45 5 1 3.8 1.9 0.4 setosa ## 46 4 8 3.0 1.4 0.3 setosa ## 47 5 1 3.8 1.6 0.2 setosa ## 48 4 6 3.2 1.4 0.2 setosa ## 49 5 3 3.7 1.5 0.2 setosa ## 50 5 &lt;NA&gt; 3.3 1.4 0.2 setosa ## 51 7 &lt;NA&gt; 3.2 4.7 1.4 versicolor ## 52 6 4 3.2 4.5 1.5 versicolor ## 53 6 9 3.1 4.9 1.5 versicolor ## 54 5 5 2.3 4.0 1.3 versicolor ## 55 6 5 2.8 4.6 1.5 versicolor ## 56 5 7 2.8 4.5 1.3 versicolor ## 57 6 3 3.3 4.7 1.6 versicolor ## 58 4 9 2.4 3.3 1.0 versicolor ## 59 6 6 2.9 4.6 1.3 versicolor ## 60 5 2 2.7 3.9 1.4 versicolor ## 61 5 &lt;NA&gt; 2.0 3.5 1.0 versicolor ## 62 5 9 3.0 4.2 1.5 versicolor ## 63 6 &lt;NA&gt; 2.2 4.0 1.0 versicolor ## 64 6 1 2.9 4.7 1.4 versicolor ## 65 5 6 2.9 3.6 1.3 versicolor ## 66 6 7 3.1 4.4 1.4 versicolor ## 67 5 6 3.0 4.5 1.5 versicolor ## 68 5 8 2.7 4.1 1.0 versicolor ## 69 6 2 2.2 4.5 1.5 versicolor ## 70 5 6 2.5 3.9 1.1 versicolor ## 71 5 9 3.2 4.8 1.8 versicolor ## 72 6 1 2.8 4.0 1.3 versicolor ## 73 6 3 2.5 4.9 1.5 versicolor ## 74 6 1 2.8 4.7 1.2 versicolor ## 75 6 4 2.9 4.3 1.3 versicolor ## 76 6 6 3.0 4.4 1.4 versicolor ## 77 6 8 2.8 4.8 1.4 versicolor ## 78 6 7 3.0 5.0 1.7 versicolor ## 79 6 &lt;NA&gt; 2.9 4.5 1.5 versicolor ## 80 5 7 2.6 3.5 1.0 versicolor ## 81 5 5 2.4 3.8 1.1 versicolor ## 82 5 5 2.4 3.7 1.0 versicolor ## 83 5 8 2.7 3.9 1.2 versicolor ## 84 6 &lt;NA&gt; 2.7 5.1 1.6 versicolor ## 85 5 4 3.0 4.5 1.5 versicolor ## 86 6 &lt;NA&gt; 3.4 4.5 1.6 versicolor ## 87 6 7 3.1 4.7 1.5 versicolor ## 88 6 3 2.3 4.4 1.3 versicolor ## 89 5 6 3.0 4.1 1.3 versicolor ## 90 5 5 2.5 4.0 1.3 versicolor ## 91 5 5 2.6 4.4 1.2 versicolor ## 92 6 1 3.0 4.6 1.4 versicolor ## 93 5 8 2.6 4.0 1.2 versicolor ## 94 5 &lt;NA&gt; 2.3 3.3 1.0 versicolor ## 95 5 6 2.7 4.2 1.3 versicolor ## 96 5 7 3.0 4.2 1.2 versicolor ## 97 5 7 2.9 4.2 1.3 versicolor ## 98 6 2 2.9 4.3 1.3 versicolor ## 99 5 1 2.5 3.0 1.1 versicolor ## 100 5 7 2.8 4.1 1.3 versicolor ## 101 6 3 3.3 6.0 2.5 virginica ## 102 5 8 2.7 5.1 1.9 virginica ## 103 7 1 3.0 5.9 2.1 virginica ## 104 6 3 2.9 5.6 1.8 virginica ## 105 6 5 3.0 5.8 2.2 virginica ## 106 7 6 3.0 6.6 2.1 virginica ## 107 4 9 2.5 4.5 1.7 virginica ## 108 7 3 2.9 6.3 1.8 virginica ## 109 6 7 2.5 5.8 1.8 virginica ## 110 7 2 3.6 6.1 2.5 virginica ## 111 6 5 3.2 5.1 2.0 virginica ## 112 6 4 2.7 5.3 1.9 virginica ## 113 6 8 3.0 5.5 2.1 virginica ## 114 5 7 2.5 5.0 2.0 virginica ## 115 5 8 2.8 5.1 2.4 virginica ## 116 6 4 3.2 5.3 2.3 virginica ## 117 6 5 3.0 5.5 1.8 virginica ## 118 7 7 3.8 6.7 2.2 virginica ## 119 7 7 2.6 6.9 2.3 virginica ## 120 6 &lt;NA&gt; 2.2 5.0 1.5 virginica ## 121 6 9 3.2 5.7 2.3 virginica ## 122 5 6 2.8 4.9 2.0 virginica ## 123 7 7 2.8 6.7 2.0 virginica ## 124 6 3 2.7 4.9 1.8 virginica ## 125 6 7 3.3 5.7 2.1 virginica ## 126 7 2 3.2 6.0 1.8 virginica ## 127 6 2 2.8 4.8 1.8 virginica ## 128 6 1 3.0 4.9 1.8 virginica ## 129 6 4 2.8 5.6 2.1 virginica ## 130 7 2 3.0 5.8 1.6 virginica ## 131 7 4 2.8 6.1 1.9 virginica ## 132 7 9 3.8 6.4 2.0 virginica ## 133 6 4 2.8 5.6 2.2 virginica ## 134 6 3 2.8 5.1 1.5 virginica ## 135 6 1 2.6 5.6 1.4 virginica ## 136 7 7 3.0 6.1 2.3 virginica ## 137 6 3 3.4 5.6 2.4 virginica ## 138 6 4 3.1 5.5 1.8 virginica ## 139 6 &lt;NA&gt; 3.0 4.8 1.8 virginica ## 140 6 9 3.1 5.4 2.1 virginica ## 141 6 7 3.1 5.6 2.4 virginica ## 142 6 9 3.1 5.1 2.3 virginica ## 143 5 8 2.7 5.1 1.9 virginica ## 144 6 8 3.2 5.9 2.3 virginica ## 145 6 7 3.3 5.7 2.5 virginica ## 146 6 7 3.0 5.2 2.3 virginica ## 147 6 3 2.5 5.0 1.9 virginica ## 148 6 5 3.0 5.2 2.0 virginica ## 149 6 2 3.4 5.4 2.3 virginica ## 150 5 9 3.0 5.1 1.8 virginica "],
["visualizing-data.html", "5 Visualizing Data", " 5 Visualizing Data here we show the ggplot2 and mayne sneak peak at plotly "],
["analyzing-data.html", "6 Analyzing Data", " 6 Analyzing Data maybe we show a t-test here - bt no special packages "],
["next-steps.html", "7 Next Steps", " 7 Next Steps "],
["references.html", "References", " References "]
]
